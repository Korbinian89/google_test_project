#include "lib_a.h"
#include <stdexcept>
#include <iostream>


//////////////////////////////////////////////////////////////////////////////////
// Just a method
//////////////////////////////////////////////////////////////////////////////////
int add(int a, int b)
{
    return a + b;
}


//////////////////////////////////////////////////////////////////////////////////
// Just a class for fixtures
//////////////////////////////////////////////////////////////////////////////////
void Account::deposit(double iSum)
{
    mBalance += iSum;
}

void Account::withdraw(double iSum)
{
    if (mBalance < iSum)
    {
        throw std::runtime_error("Insufficient funds");
    }
    mBalance -= iSum;
}

double Account::get_balance() const
{
    return mBalance;
}

void Account::transfer(Account& iTo, double iSum)
{
    withdraw(iSum);
    iTo.deposit(iSum);
}


//////////////////////////////////////////////////////////////////////////////////
// Just a class for parameterized fixtures
//////////////////////////////////////////////////////////////////////////////////
Validator::Validator(int iLow, int iHigh)
: mLow {iLow}
, mHigh {iHigh}
{}


bool Validator::in_range(int iValueToTest)
{
    return mLow <= iValueToTest && iValueToTest <= mHigh;
}


//////////////////////////////////////////////////////////////////////////////////
// Just a class for mocking
//////////////////////////////////////////////////////////////////////////////////
void MyClass::my_method()
{
    std::cout << "MyClass" << std::endl;
}